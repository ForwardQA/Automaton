apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'application'
apply from: 'https://repository-javafx-gradle-plugin.forge.cloudbees.com/snapshot/javafx.plugin'

defaultTasks 'clean', 'jar', 'test'

group = 'com.athaydes'
version = "0.1-SNAPSHOT"
description = 'Automaton is a tool for easily automating GUI tests in JavaFX and Swing'

def groovyVersion = '2.1.5'

repositories {
	mavenLocal()
	mavenCentral()
}

dependencies {
	compile "org.codehaus.groovy:groovy-all:${groovyVersion}"
	compile "org.slf4j:slf4j-api:1.7.5"
	compile "org.hamcrest:hamcrest-library:1.3"
	compile "junit:junit:4.9"
	compile "com.google.code.tempus-fugit:tempus-fugit:1.1"
	runtime "org.slf4j:slf4j-log4j12:1.7.5"
	runtime "log4j:log4j:1.2.14"
	testCompile "org.spockframework:spock-core:0.7-groovy-2.0"
	testCompile "cglib:cglib-nodep:2.2.2"
}

compileTestJava.enabled = false

test {
	forkEvery 1 // JavaFX Stage has to be closed to avoid OS Exception in Linux at end of tests
	testLogging.showStandardStreams = true
	beforeTest { descriptor ->
		logger.lifecycle( "Running test: " + descriptor )
	}
}

jfxJar.enabled = false

def manifestAttributes = [
		"Implementation-Title"  : "Automaton",
		"Implementation-Version": version,
		"Description"           : description,
		"Main-Class"            : 'com.athaydes.automaton.Automaton',
		"Built-On"              : new java.util.Date(),
		"Premain-Class"         : 'com.athaydes.automaton.cli.AutomatonJavaAgent'
]

jar {
	manifest {
		attributes( manifestAttributes )
	}
}

task uberjar( type: Jar, dependsOn: [ ':compileJava', ':compileGroovy' ] ) {
	classifier = 'all-deps'
	from files( sourceSets.main.output.classesDir )
	from files( sourceSets.main.output.resourcesDir )
	from configurations.runtime.asFileTree.files
			.findAll { !it.name.endsWith( 'jfxrt.jar' ) }
			.collect { zipTree( it ) }

	manifest {
		attributes( manifestAttributes )
	}
}
